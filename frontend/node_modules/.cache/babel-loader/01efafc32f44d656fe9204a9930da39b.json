{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useAuthContext } from './useAuthContext';\nexport const useSignup = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n\n  const signup = async (email, password) => {\n    setIsLoading(true);\n    setError(null);\n    const response = await fetch('/api/user/signup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const json = response.json();\n\n    if (!response.ok) {\n      setIsLoading(false);\n      setError(json.error);\n    }\n\n    if (response.ok) {\n      //save the user to local storage\n      localStorage.setItem('user', JSON.stringify(json)); //update the auth context\n\n      dispatch({\n        type: 'LOGIN',\n        payload: json\n      });\n      setIsLoading(false);\n    }\n  };\n\n  return {\n    signup,\n    isLoading,\n    error\n  };\n};\n\n_s(useSignup, \"Yqo7s9XtfMNlgAmXrv29vlmt2a0=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","useAuthContext","useSignup","error","setError","isLoading","setIsLoading","dispatch","signup","email","password","response","fetch","method","headers","body","JSON","stringify","json","ok","localStorage","setItem","type","payload"],"sources":["C:/Users/msi/Desktop/Web Dev/MERN Stack/frontend/src/hooks/useSignup.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport {useAuthContext} from './useAuthContext'\r\n\r\nexport const useSignup = () =>{\r\n    const [error,setError] = useState(null)\r\n    const [isLoading, setIsLoading] = useState(null)\r\n    const {dispatch} = useAuthContext()\r\n\r\n    const signup = async(email,password) =>{\r\n        setIsLoading(true)\r\n        setError(null)\r\n\r\n        const response = await fetch('/api/user/signup',{\r\n            method: 'POST',\r\n            headers: {'Content-Type': 'application/json'},\r\n            body: JSON.stringify({email,password})\r\n        })\r\n        const json = response.json()\r\n\r\n        if(!response.ok){\r\n            setIsLoading(false)\r\n            setError(json.error)\r\n        }\r\n        if(response.ok){\r\n            //save the user to local storage\r\n            localStorage.setItem('user',JSON.stringify(json))\r\n\r\n            //update the auth context\r\n            dispatch({type: 'LOGIN',payload: json})\r\n            setIsLoading(false)\r\n        }\r\n    }\r\n\r\n    return {signup,isLoading,error}\r\n}"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAK;EAAA;;EAC1B,MAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBJ,QAAQ,CAAC,IAAD,CAAjC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM;IAACO;EAAD,IAAaN,cAAc,EAAjC;;EAEA,MAAMO,MAAM,GAAG,OAAMC,KAAN,EAAYC,QAAZ,KAAwB;IACnCJ,YAAY,CAAC,IAAD,CAAZ;IACAF,QAAQ,CAAC,IAAD,CAAR;IAEA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,EAAoB;MAC5CC,MAAM,EAAE,MADoC;MAE5CC,OAAO,EAAE;QAAC,gBAAgB;MAAjB,CAFmC;MAG5CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QAACR,KAAD;QAAOC;MAAP,CAAf;IAHsC,CAApB,CAA5B;IAKA,MAAMQ,IAAI,GAAGP,QAAQ,CAACO,IAAT,EAAb;;IAEA,IAAG,CAACP,QAAQ,CAACQ,EAAb,EAAgB;MACZb,YAAY,CAAC,KAAD,CAAZ;MACAF,QAAQ,CAACc,IAAI,CAACf,KAAN,CAAR;IACH;;IACD,IAAGQ,QAAQ,CAACQ,EAAZ,EAAe;MACX;MACAC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BL,IAAI,CAACC,SAAL,CAAeC,IAAf,CAA5B,EAFW,CAIX;;MACAX,QAAQ,CAAC;QAACe,IAAI,EAAE,OAAP;QAAeC,OAAO,EAAEL;MAAxB,CAAD,CAAR;MACAZ,YAAY,CAAC,KAAD,CAAZ;IACH;EACJ,CAvBD;;EAyBA,OAAO;IAACE,MAAD;IAAQH,SAAR;IAAkBF;EAAlB,CAAP;AACH,CA/BM;;GAAMD,S;UAGUD,c"},"metadata":{},"sourceType":"module"}